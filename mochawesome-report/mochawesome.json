{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-08T16:50:07.497Z",
    "end": "2024-07-08T16:50:18.668Z",
    "duration": 11171,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dad1a9aa-f67b-4dcf-b0fb-52c2e079b164",
      "title": "",
      "fullFile": "/Users/daniel/Documents/Data Daniel/mocking-api-selenium/test/mocha.js",
      "file": "/test/mocha.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4fd5d408-b64c-4ed1-bd8a-08dc278a397b",
          "title": "User",
          "fullFile": "/Users/daniel/Documents/Data Daniel/mocking-api-selenium/test/mocha.js",
          "file": "/test/mocha.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"User\"",
              "fullTitle": "User \"before each\" hook in \"User\"",
              "timedOut": false,
              "duration": 817,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(Browser.CHROME).build();\nawait driver.navigate().to(MOCKING_API_URL);",
              "err": {},
              "uuid": "9f97623c-5b22-4c15-8023-163b83ce1855",
              "parentUUID": "4fd5d408-b64c-4ed1-bd8a-08dc278a397b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"User\"",
              "fullTitle": "User \"after each\" hook in \"User\"",
              "timedOut": false,
              "duration": 56,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "a1441d38-e427-466f-938d-5a99ada6c3dc",
              "parentUUID": "4fd5d408-b64c-4ed1-bd8a-08dc278a397b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Able to see Add API",
              "fullTitle": "User Able to see Add API",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const btnAddAPI = await driver.findElement(By.xpath(XPATH.btnAddAPI));\nconst elementText = await btnAddAPI.getText();\nassert.ok(elementText === UI_TEXT.btnAddAPI);",
              "err": {},
              "uuid": "ea441864-7e94-4a07-ad81-0a5120da3529",
              "parentUUID": "4fd5d408-b64c-4ed1-bd8a-08dc278a397b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Able to click Add API button",
              "fullTitle": "User Able to click Add API button",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const btnAddAPI = await driver.findElement(By.xpath(XPATH.btnAddAPI));\nawait btnAddAPI.click();\nconst popup = await driver.findElement(By.xpath(XPATH.popupAddEdit));\nconst popupTitle = await driver\n  .findElement(By.xpath(XPATH.popupTitle))\n  .getText();\nlet displayValue = await popup.getCssValue(\"display\");\nassert.ok(displayValue !== \"none\");\nassert.ok(popupTitle === UI_TEXT.btnAddAPI);",
              "err": {},
              "uuid": "cc0201c5-b1a0-465d-b98d-03a59fb846e1",
              "parentUUID": "4fd5d408-b64c-4ed1-bd8a-08dc278a397b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Able to see table column text",
              "fullTitle": "User Able to see table column text",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const tableTh = await driver.findElements(By.xpath(XPATH.tableHead));\ntableTh.forEach(async (val, idx) =>\n  assert.ok((await val.getText()) === UI_TEXT.tableTh[idx])\n);",
              "err": {},
              "uuid": "8acf8fa0-f513-427e-af57-cb948d6ada05",
              "parentUUID": "4fd5d408-b64c-4ed1-bd8a-08dc278a397b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Able to copy URL from existing data",
              "fullTitle": "User Able to copy URL from existing data",
              "timedOut": false,
              "duration": 1299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const btnCopyUrl = await driver.wait(\n  until.elementLocated(By.xpath(XPATH.btnCopyURL), 1000)\n);\nawait btnCopyUrl.click();\nconst notificationText = await driver\n  .wait(until.elementLocated(By.xpath(XPATH.notification), 1000))\n  .getText();\nassert.ok(notificationText.includes(UI_TEXT.notificationCopiedAPI));",
              "err": {},
              "uuid": "620ca741-2bd5-4977-8c13-a2ab13b0ec9f",
              "parentUUID": "4fd5d408-b64c-4ed1-bd8a-08dc278a397b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Able to copy CURL from existing data",
              "fullTitle": "User Able to copy CURL from existing data",
              "timedOut": false,
              "duration": 1298,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const btnCopyUrl = await driver.wait(\n  until.elementLocated(By.xpath(XPATH.btnCopyCURL), 1000)\n);\nawait btnCopyUrl.click();\nconst notificationText = await driver\n  .wait(until.elementLocated(By.xpath(XPATH.notification), 1000))\n  .getText();\nassert.ok(notificationText.includes(UI_TEXT.notificationCopiedAPI));",
              "err": {},
              "uuid": "8fb96ed1-0c9f-43d4-a1bf-79eb27970b62",
              "parentUUID": "4fd5d408-b64c-4ed1-bd8a-08dc278a397b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Able to edit existing data",
              "fullTitle": "User Able to edit existing data",
              "timedOut": false,
              "duration": 2104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const editData = driver.wait(\n  until.elementLocated(By.xpath(XPATH.btnEditAPI), 1000)\n);\nawait editData.click();\nconst popupTitle = await driver\n  .findElement(By.xpath(XPATH.popupTitle))\n  .getText();\nassert.ok(popupTitle === UI_TEXT.btnEditAPI);",
              "err": {},
              "uuid": "ccf45f23-e76f-4acb-ab80-1c5ad8d0d2dc",
              "parentUUID": "4fd5d408-b64c-4ed1-bd8a-08dc278a397b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea441864-7e94-4a07-ad81-0a5120da3529",
            "cc0201c5-b1a0-465d-b98d-03a59fb846e1",
            "8acf8fa0-f513-427e-af57-cb948d6ada05",
            "620ca741-2bd5-4977-8c13-a2ab13b0ec9f",
            "8fb96ed1-0c9f-43d4-a1bf-79eb27970b62",
            "ccf45f23-e76f-4acb-ab80-1c5ad8d0d2dc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4778,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.6.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}